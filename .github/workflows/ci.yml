on: [push, pull_request]

name: CI

jobs:
  check:
    name: Check
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v1
      - run: cargo check --workspace --all-targets --all-features

  check_msrv:
    name: Check ash MSRV (1.63.0)
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v1
      - uses: dtolnay/rust-toolchain@1.63.0
      - run: cargo check -p ash -p ash-rewrite --all-features

  check_ash_window_msrv:
    name: Check ash-window MSRV (1.64.0)
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v1
      - uses: dtolnay/rust-toolchain@1.64.0
      - run: cargo check -p ash-window -p examples --all-features

  # TODO: add a similar job for the rewrite once that generates code
  generated:
    name: Generated
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
        with:
          submodules: true
      - name: Run generator
        run: cargo run -p generator
      - name: Diff autogen result
        run: test -z "$(git status --porcelain)" || (echo "::error::Generated files are different, please regenerate with cargo run -p generator!"; git diff; false)

  test:
    name: Test Suite
    runs-on: ubuntu-latest
    steps:
      - name: Install Vulkan loader
        run: sudo apt-get install libvulkan-dev
      - uses: actions/checkout@v1
      - name: Test all targets
        run: cargo test --workspace --all-targets
      - name: Test docs
        run: cargo test --workspace --doc

  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - run: cargo fmt --all -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Clippy lint without features
        # Only test the core ash, ash-rewrite and ash-window crate, where features reside.
        # The examples crate would otherwise enable all default features again,
        # making this test moot.
        run: cargo clippy -p ash -p ash-rewrite -p ash-window --no-default-features -- -D warnings
      - name: Clippy lint with all features
        run: cargo clippy --workspace --all-targets --all-features -- -D warnings
      - name: Clippy lint with default features
        run: cargo clippy --workspace --all-targets -- -D warnings

  docs:
    name: Build-test docs
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Document all crates
        env:
          RUSTDOCFLAGS: -Dwarnings
        run: cargo doc --all --all-features --no-deps --document-private-items
